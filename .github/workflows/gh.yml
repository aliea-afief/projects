name: Detect Changed Files via gh api (No Checkout)
on:
  push:
    branches:
      [ pre-release_** ]
  pull_request:
    branches:
      [main]
jobs:
  detect-files:
    runs-on: ubuntu-latest
    steps:
      - name: Set up GH CLI authentication
        run: |
          # GITHUB_TOKEN=${{ secrets.GH_TOKEN }}
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Detect changed files
        shell: bash
        env:
          REPO: ${{ github.repository }}
          EVENT_NAME: ${{ github.event_name }}
        run: |
          # Get all commit SHAs from the event
          commitShas="${{ join(github.event.commits.*.id, ' ') }}"
          
          # Fallback for pull_request (GitHub only sends HEAD SHA)
          if [ -z "$commitShas" ] && [ "$EVENT_NAME" == "pull_request" ]; then
            commitShas="${{ github.event.pull_request.head.sha }}"
          fi
          declare -A changedFiles
          echo "Processing commits: $commitShas"
          for sha in $commitShas; do
            echo "Fetching commit: $sha"
            commits=$(gh api \
              -H "Accept: application/vnd.github+json" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              "/repos/$REPO/commits/${sha}")

            filenames=$(jq -r '.files[] | select(.status == "modified" or .status == "added") | .filename' <<< "${commits}")
            
            for filename in $filenames; do
              changedFiles["$filename"]=1
            done
          done

          echo ""
          echo "âœ… Unique Changed Files:"
          for file in "${!changedFiles[@]}"; do
            echo "$file"
          done

          # Save output for future steps (optional)
          echo "changed_files=${!changedFiles[@]}" >> $GITHUB_OUTPUT
          
          # fetch from webhook payload
          cat $GITHUB_EVENT_PATH | jq .
          
      # - name: Extract modified files into a list and print
      #   run: |
      #     echo "Extracting modified files..."
      #     modified_files=()

      #     # Read each modified file and append to the array
      #     while IFS= read -r file; do
      #       modified_files+=("$file")
      #     done < <(cat "$GITHUB_EVENT_PATH" | jq -r '.commits[].modified[]')

      #     echo "Modified files list:"
      #     for file in "${modified_files[@]}"; do
      #       echo " - $file"
      #     done

      # - name: Extract commit SHAs and changed files into delta.txt
      #   run: |
      #     echo "Commit SHAs and changed files:" > delta.txt
      #     jq -c '.commits[] | {id: .id, added: .added, modified: .modified, removed: .removed}' $GITHUB_EVENT_PATH | while read commit; do
      #       sha=$(echo "$commit" | jq -r '.id')
      #       echo "Commit: $sha" >> delta.txt

      #       echo "Added files:" >> delta.txt
      #       echo "$commit" | jq -r '.added[]?' >> delta.txt

      #       echo "Modified files:" >> delta.txt
      #       echo "$commit" | jq -r '.modified[]?' >> delta.txt

      #       echo "Removed files:" >> delta.txt
      #       echo "$commit" | jq -r '.removed[]?' >> delta.txt

      #       echo "-----" >> delta.txt
      #     done
          
      # - name: Show delta.txt content
      #   run: cat delta.txt
